<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ggNse3v/D+FfZ7PWV/G+AAAAAElFTkSuQmCC
</value>
  </data>
</root>